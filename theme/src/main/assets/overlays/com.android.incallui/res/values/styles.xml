<?xml version="1.0" encoding="utf-8"?>
<resources>
    <!-- Theme for the InCallActivity activity. Should have a transparent background for the
     circular reveal animation for a new outgoing call to work correctly. We don't just use
     Theme.Black.NoTitleBar directly, since we want any popups or dialogs from the
     InCallActivity to have the correct Material style. -->
    <style name="Theme.InCallScreen" parent="@android:style/Theme.Holo.NoActionBar">
        <item name="android:windowBackground">@android:color/black</item>
        <item name="android:windowAnimationStyle">@null</item>
        <item name="android:popupMenuStyle">@style/InCallPopupMenuStyle</item>
        <item name="android:actionBarStyle">@style/InCallActionBarStyle</item>
        <item name="android:buttonStyleToggle">@style/InCallCompoundButton</item>
        <item name="android:alertDialogTheme">@*android:style/Theme.Holo.Light.Dialog.Alert</item>

        <!-- <item name="android:windowIsTranslucent">true</item>
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:windowContentOverlay">@null</item>
        <item name="android:popupMenuStyle">@style/InCallPopupMenuStyle</item>
        <item name="android:actionBarStyle">@style/InCallActionBarStyle</item>
        <item name="android:buttonStyleToggle">@style/InCallCompoundButton</item>
        <item name="android:alertDialogTheme">@*android:style/Theme.Holo.Light.Dialog.Alert</item> -->
    </style>

    <style name="InCallPopupMenuStyle" parent="@android:style/Theme.Holo.Light"/>

    <style name="InCallActionBarStyle" parent="@android:style/Widget.Holo.Light.ActionBar"/>

    <!-- Buttons in the main "button row" of the in-call onscreen touch UI. -->
    <style name="InCallButton">
        <item name="android:layout_width">0px</item>
        <item name="android:layout_height">@dimen/in_call_button_height</item>
        <item name="android:layout_weight">1</item>
        <item name="android:background">?android:attr/selectableItemBackground</item>
    </style>

    <!-- "Compound button" variation of InCallButton.
         These buttons have the concept of two states: checked and unchecked.
         (This style is just like "InCallButton" except that we also
         clear out android:textOn and android:textOff, to avoid the default
         text label behavior of the ToggleButton class.) -->
    <style name="InCallCompoundButton" parent="InCallButton">
        <item name="android:textOn">@null</item>
        <item name="android:textOff">@null</item>
    </style>

</resources>
